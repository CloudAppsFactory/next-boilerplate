{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n// #region Global Imports\nimport * as React from \"react\";\n// #endregion Global Imports\n// #region Local Imports\nimport { withTranslation } from \"@Server/i18n\"; // #endregion Local Imports\n// #region Interface Imports\n\n// #endregion Interface Imports\nvar Error = function Error(_ref) {\n  var t = _ref.t,\n      statusCode = _ref.statusCode;\n  return __jsx(\"div\", null, t(\"common:Error\"), statusCode);\n};\n\n_c = Error;\n\nError.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var res, err, statusCode;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref2.res, err = _ref2.err;\n\n            if (res) {\n              statusCode = res.statusCode;\n            } else if (err) {\n              statusCode = err.statusCode;\n            }\n\n            return _context.abrupt(\"return\", {\n              namespacesRequired: [\"common\"],\n              statusCode: statusCode\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default withTranslation(\"common\")(Error);\n\nvar _c;\n\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"sources":["F:/MY_GIT/next-boilerplate/pages/_error/index.tsx"],"names":["React","withTranslation","Error","t","statusCode","getInitialProps","res","err","namespacesRequired"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;AAEA;AACA,SAASC,eAAT,QAAgC,cAAhC,C,CACA;AAEA;;AAEA;AAEA,IAAMC,KAA2D,GAAG,SAA9DA,KAA8D,OAG9D;AAAA,MAFFC,CAEE,QAFFA,CAEE;AAAA,MADFC,UACE,QADFA,UACE;AACF,SACI,mBACKD,CAAC,CAAC,cAAD,CADN,EAEKC,UAFL,CADJ;AAMH,CAVD;;KAAMF,K;;AAYNA,KAAK,CAACG,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd;;AAGpB,gBAAID,GAAJ,EAAS;AACFF,cAAAA,UADE,GACaE,GADb,CACFF,UADE;AAER,aAFD,MAEO,IAAIG,GAAJ,EAAS;AACTH,cAAAA,UADS,GACMG,GADN,CACTH,UADS;AAEf;;AAPmB,6CASb;AACHI,cAAAA,kBAAkB,EAAE,CAAC,QAAD,CADjB;AAEHJ,cAAAA,UAAU,EAAVA;AAFG,aATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeH,eAAe,CAAC,QAAD,CAAf,CAA0BC,KAA1B,CAAf","sourcesContent":["// #region Global Imports\r\nimport * as React from \"react\";\r\nimport { NextPage } from \"next\";\r\n// #endregion Global Imports\r\n\r\n// #region Local Imports\r\nimport { withTranslation } from \"@Server/i18n\";\r\n// #endregion Local Imports\r\n\r\n// #region Interface Imports\r\nimport { IErrorPage } from \"@Interfaces\";\r\n// #endregion Interface Imports\r\n\r\nconst Error: NextPage<IErrorPage.IProps, IErrorPage.InitialProps> = ({\r\n    t,\r\n    statusCode,\r\n}) => {\r\n    return (\r\n        <div>\r\n            {t(\"common:Error\")}\r\n            {statusCode}\r\n        </div>\r\n    );\r\n};\r\n\r\nError.getInitialProps = async ({ res, err }) => {\r\n    let statusCode;\r\n\r\n    if (res) {\r\n        ({ statusCode } = res);\r\n    } else if (err) {\r\n        ({ statusCode } = err);\r\n    }\r\n\r\n    return {\r\n        namespacesRequired: [\"common\"],\r\n        statusCode,\r\n    };\r\n};\r\n\r\nexport default withTranslation(\"common\")(Error);\r\n"]},"metadata":{},"sourceType":"module"}