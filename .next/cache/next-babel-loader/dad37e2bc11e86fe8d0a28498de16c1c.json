{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// #region Local Imports\nimport { ActionConsts } from \"@Definitions\"; // #endregion Local Imports\n// #region Interface Imports\n\n// #endregion Interface Imports\nconst INITIAL_STATE = {\n  home: {\n    version: 1\n  },\n  image: {\n    url: \"\"\n  }\n};\nexport const HomeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ActionConsts.Home.SetReducer:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case ActionConsts.Home.ResetReducer:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["F:/MY_GIT/next-boilerplate/src/Redux/Reducers/home/index.ts"],"names":["ActionConsts","INITIAL_STATE","home","version","image","url","HomeReducer","state","action","type","Home","SetReducer","payload","ResetReducer"],"mappings":";;;;;;AAAA;AACA,SAASA,YAAT,QAA6B,cAA7B,C,CACA;AAEA;;AAEA;AAEA,MAAMC,aAAoC,GAAG;AACzCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE;AADP,GADmC;AAIzCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAE;AADF;AAJkC,CAA7C;AAWA,OAAO,MAAMC,WAAW,GAAG,CACvBC,KAAK,GAAGN,aADe,EAEvBO,MAFuB,KAGtB;AACD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,YAAY,CAACU,IAAb,CAAkBC,UAAvB;AACI,6CACOJ,KADP,GAEOC,MAAM,CAACI,OAFd;;AAKJ,SAAKZ,YAAY,CAACU,IAAb,CAAkBG,YAAvB;AACI,aAAOZ,aAAP;;AAEJ;AACI,aAAOM,KAAP;AAXR;AAaH,CAjBM","sourcesContent":["// #region Local Imports\r\nimport { ActionConsts } from \"@Definitions\";\r\n// #endregion Local Imports\r\n\r\n// #region Interface Imports\r\nimport { IAction, IHomePage } from \"@Interfaces\";\r\n// #endregion Interface Imports\r\n\r\nconst INITIAL_STATE: IHomePage.IStateProps = {\r\n    home: {\r\n        version: 1,\r\n    },\r\n    image: {\r\n        url: \"\",\r\n    },\r\n};\r\n\r\ntype IMapPayload = IHomePage.Actions.IMapPayload;\r\n\r\nexport const HomeReducer = (\r\n    state = INITIAL_STATE,\r\n    action: IAction<IMapPayload>\r\n) => {\r\n    switch (action.type) {\r\n        case ActionConsts.Home.SetReducer:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        case ActionConsts.Home.ResetReducer:\r\n            return INITIAL_STATE;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}