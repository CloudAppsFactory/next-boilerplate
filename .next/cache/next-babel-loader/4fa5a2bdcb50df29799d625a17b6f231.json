{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    cursor: \", \";\\n    color: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// #region Global Imports\nimport React from \"react\";\nimport styled from \"styled-components\"; // #endregion Global Imports\n// #region Local Imports\n\n// #endregion Local Imports\nvar Container = styled.div(_templateObject(), function (_ref) {\n  var disabled = _ref.disabled;\n  return disabled ? \"not-allowed\" : \"pointer\";\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.colors.primary;\n});\n_c = Container;\nexport var Button = function Button(props) {\n  return __jsx(Container, props);\n};\n_c2 = Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["F:/MY_GIT/next-boilerplate/src/Components/Basic/Button/index.tsx"],"names":["React","styled","Container","div","disabled","theme","colors","primary","Button","props"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;AAEA;;AAEA;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV,oBACD;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAmBA,QAAQ,GAAG,aAAH,GAAmB,SAA9C;AAAA,CADC,EAEF;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,OAA5B;AAAA,CAFE,CAAf;KAAML,S;AAKN,OAAO,IAAMM,MAA+C,GAAG,SAAlDA,MAAkD,CAAAC,KAAK,EAAI;AACpE,SAAO,MAAC,SAAD,EAAeA,KAAf,CAAP;AACH,CAFM;MAAMD,M","sourcesContent":["// #region Global Imports\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n// #endregion Global Imports\r\n\r\n// #region Local Imports\r\nimport { IButton } from \"./Button\";\r\n// #endregion Local Imports\r\n\r\nconst Container = styled.div<IButton.IProps>`\r\n    cursor: ${({ disabled }) => (disabled ? \"not-allowed\" : \"pointer\")};\r\n    color: ${({ theme }) => theme.colors.primary};\r\n`;\r\n\r\nexport const Button: React.FunctionComponent<IButton.IProps> = props => {\r\n    return <Container {...props} />;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}